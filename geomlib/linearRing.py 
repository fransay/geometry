import math


class linearRing(object):
    def __init__(self, *points):
        self.points = points

    def length(self):
        m, n = 0, 1
        total_length = 0
        while len(self.points) >= n:
            point1 = self.points[m]
            point2 = self.points[n]
            diff_in_x = point2[0] - point1[0]
            diff_in_y = point2[1] - point1[1]
            add_diff = diff_in_x ** 2 + diff_in_y ** 2
            dist = math.sqrt(add_diff)
            total_length += dist
            m += 1
            n += 1
            return total_length

    def area(self):
        """calculating area using coordinates"""
        len_of_points = len(self.points)
        count = 0
        b, u = 0, 1

        sumForwardPassResults, sumBackwardPassResults = 0, 0

        while True:
            index_one, index_two = self.points[b][1], self.points[u][0]  # forward pass
            index_three, index_four = self.points[b][0], self.points[u][1]  # backward pass
            forwardPassResults = index_one * index_two
            backwardPassResults = index_three * index_four
            sumForwardPassResults += forwardPassResults
            sumBackwardPassResults += backwardPassResults
            b, u = b + 1, u + 1
            count += 1
            areaOfLinearRing = (sumForwardPassResults - sumBackwardPassResults)/2
            if count > len_of_points:
                break
            return areaOfLinearRing


    def centriod(self):
        pass


    def __str__(self):
        """WKR string representation"""
        pass


if __name__ == '__main__':
    linearRingOne = linearRing([3, 5], [6, 8], [36.5, 3])
    print(linearRingOne.area())





